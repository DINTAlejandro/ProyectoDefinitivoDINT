<Window x:Class="ProyectoDefinitivoDINT.Ventanas.NuevoArticuloVentana"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProyectoDefinitivoDINT.Ventanas"
        mc:Ignorable="d"
        xmlns:inputLayout="http://schemas.syncfusion.com/wpf"
        Title="Nuevo artículo" 
        Height="600" Width="900"
        ResizeMode="NoResize" 
        ShowInTaskbar="False" 
        Icon="/Recursos/articulo_icono.ico">

    <Window.Resources>
        <ControlTemplate x:Key="cancelButton" TargetType="{x:Type Button}">
            <Border x:Name="border" Padding="5" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Background" TargetName="border" Value="Red"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#000000"/>
                    <Setter Property="Foreground" Value="#FFFFFF"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="acceptButton" TargetType="{x:Type Button}">
            <Border x:Name="border" Padding="5" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Background" TargetName="border" Value="Green"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#000000"/>
                    <Setter Property="Foreground" Value="#FFFFFF"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="selectImagenButton" TargetType="{x:Type Button}">
            <Border x:Name="border" Padding="5" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Background" TargetName="border" Value="Blue"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#000000"/>
                    <Setter Property="Foreground" Value="#FFFFFF"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition></ColumnDefinition>
            <ColumnDefinition></ColumnDefinition>
        </Grid.ColumnDefinitions>
        <StackPanel Grid.Column="0" HorizontalAlignment="Center">
            <inputLayout:SfTextInputLayout Hint="Nombre" HelperText="Nombre del articulo" Margin="10">
                <TextBox x:Name="tbxTitulo" Text="{Binding Path=ArticuloActual.Titulo}"></TextBox>
            </inputLayout:SfTextInputLayout>
            <inputLayout:SfTextInputLayout Hint="Autor" HelperText="Elegir el autor del artículo" Margin="10">
                <ComboBox x:Name="cbxAutor" Width="150" ItemsSource="{Binding Path=ListaAutores}" SelectedItem="{Binding Path=ArticuloActual.Autor.Nombre}"></ComboBox>
            </inputLayout:SfTextInputLayout>
            <inputLayout:SfTextInputLayout Hint="Seccion" HelperText="Elegir la seccion del artículo" Margin="10">
                <ComboBox x:Name="cbxSeccion" Width="150" ItemsSource="{Binding Path=ListaCategorias}" SelectedItem="{Binding Path=ArticuloActual.Seccion}"></ComboBox>
            </inputLayout:SfTextInputLayout>

            <Border Margin="0,10" BorderBrush="Black" BorderThickness="1" CornerRadius="2">
                <Image Source="{Binding Path=ArticuloActual.Imagen}" Height="200" Width="230"></Image>
            </Border>
            <Button Height="40" Width="200" Margin="0,10" x:Name="btnElegirImagen" DockPanel.Dock="Left" Command="{Binding Path=SeleccionarImagenCommand}" Template="{DynamicResource selectImagenButton}">Elegir imagen</Button>
        </StackPanel>
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="5*"></RowDefinition>
                <RowDefinition Height="1*"></RowDefinition>
            </Grid.RowDefinitions>

            <inputLayout:SfTextInputLayout  Grid.Row="0" HelperText="Texto del artículo" Margin="10">
                <TextBox x:Name="tbxTexto" Height="375" VerticalAlignment="Stretch" AcceptsReturn="True" Margin="10" Text="{Binding Path=ArticuloActual.Texto}"></TextBox>
            </inputLayout:SfTextInputLayout>
            <StackPanel DockPanel.Dock="Bottom" Grid.Row="1" HorizontalAlignment="Right" Orientation="Horizontal">
                <Button Height="40" Width="70" x:Name="btnCancelar"  Command="{}" Template="{DynamicResource cancelButton}" IsCancel="True">Cancelar</Button>
                <Button x:Name="btnAceptar" Height="40" Width="70" Margin="10,0" Command="{Binding Path=AceptarCommand}" Template="{DynamicResource acceptButton}" IsDefault="True" Click="btnAceptar_Click">Aceptar</Button>
            </StackPanel>
        </Grid>
    </Grid>
</Window>
