<Window x:Class="ProyectoDefinitivoDINT.Ventanas.EditarAutorVentana"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ProyectoDefinitivoDINT.Ventanas"
        mc:Ignorable="d"
        xmlns:inputLayout="http://schemas.syncfusion.com/wpf"
        Title="Editar articulo" 
        Height="550" Width="350"
        ResizeMode="NoResize" 
        ShowInTaskbar="False" 
        Icon="/Recursos/ventana_autor_icono.ico">

    <Window.Resources>
        <ControlTemplate x:Key="newButton" TargetType="{x:Type Button}">
            <Border x:Name="border" Padding="5" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Background" TargetName="border" Value="LightBlue"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#000000"/>
                    <Setter Property="Foreground" Value="#FFFFFF"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="cancelButton" TargetType="{x:Type Button}">
            <Border x:Name="border" Padding="5" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Background" TargetName="border" Value="Red"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#000000"/>
                    <Setter Property="Foreground" Value="#FFFFFF"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <ControlTemplate x:Key="acceptButton" TargetType="{x:Type Button}">
            <Border x:Name="border" Padding="5" CornerRadius="4" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsDefaulted" Value="True">
                    <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                </Trigger>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                </Trigger>
                <Trigger Property="IsPressed" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFC4E5F6"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                </Trigger>
                <Trigger Property="ToggleButton.IsChecked" Value="True">
                    <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="False">
                    <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                    <Setter Property="Foreground" Value="#FF838383"/>
                </Trigger>
                <Trigger Property="IsEnabled" Value="True">
                    <Setter Property="Background" TargetName="border" Value="LightGreen"/>
                    <Setter Property="BorderBrush" TargetName="border" Value="#000000"/>
                    <Setter Property="Foreground" Value="#FFFFFF"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
    </Window.Resources>

    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
        <inputLayout:SfTextInputLayout Hint="Nombre" HelperText="Nombre del autor" Margin="10">
            <TextBox x:Name="tbxNombre" Text="{Binding Path=AutorActual.Nombre}"></TextBox>
        </inputLayout:SfTextInputLayout>

        <inputLayout:SfTextInputLayout Hint="@Manuel23" HelperText="Nickname" Margin="10">
            <TextBox x:Name="tbxNickName" Text="{Binding Path=AutorActual.Nickname}"></TextBox>
        </inputLayout:SfTextInputLayout>
        <inputLayout:SfTextInputLayout Hint="Red social" HelperText="Elegir la red social correspondiente" Margin="10">
            <ComboBox x:Name="cbxRedSocial" Width="150" ItemsSource="{Binding Path=ListaRedesSociales}" SelectedItem="{Binding Path=AutorActual.ImagenRedSocial}"></ComboBox>
        </inputLayout:SfTextInputLayout>

        <Border BorderBrush="Black" BorderThickness="1" CornerRadius="2">
            <Image Source="{Binding Path=AutorActual.Image}" Height="200" Width="230"></Image>
        </Border>

        <DockPanel LastChildFill="False" Margin="0,10">
            <Button x:Name="btnElegirImagen" DockPanel.Dock="Left" Command="{Binding Path=SeleccionarImagenCommand}" Template="{DynamicResource newButton}">Elegir imagen</Button>
            <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
                <Button x:Name="btnCancelar"  Command="{}" Template="{DynamicResource cancelButton}" IsCancel="True">Cancelar</Button>
                <Button Margin="10,0" x:Name="btnAceptar"  Command="{Binding Path=AceptarCommand}" Template="{DynamicResource acceptButton}" IsDefault="True" Click="btnAceptar_Click">Aceptar</Button>
            </StackPanel>
        </DockPanel>
    </StackPanel>
</Window>
